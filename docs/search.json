[
  {
    "objectID": "past-events/site-test/index.html",
    "href": "past-events/site-test/index.html",
    "title": "Test post linking to a notebook",
    "section": "",
    "text": "Testing the site’s ability to display jupyter notebooks.\nnotebook"
  },
  {
    "objectID": "past-events/chat-GPT-peter/index.html",
    "href": "past-events/chat-GPT-peter/index.html",
    "title": "Chat-GPT: The architecture behind the model",
    "section": "",
    "text": "There is a slideshow accompanying this section."
  },
  {
    "objectID": "past-events/numpy-peter/index.html",
    "href": "past-events/numpy-peter/index.html",
    "title": "Numpy deep dive",
    "section": "",
    "text": "numpylogo\n\n\nThis evening Peter hosted a talk on NumPy, a python numeric processing package which runs on C under the hood.\nPeter made a notebook accompanying this talk: notebook"
  },
  {
    "objectID": "past-events/site-test/nb_with_code.html",
    "href": "past-events/site-test/nb_with_code.html",
    "title": "ML Squamish",
    "section": "",
    "text": "import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\n\n\nThe following function describes a straight line , where m is the gradient and c is the y intercept:\n\\[\n\\large y = mx + c\n\\]\nWe can show that this equation plots a straight line by experiment: making a set of inputs x, and calculating the corresponding values of y, a function of x:\n\nx = np.linspace(0,49)\nm = 2\nc = -4\nprint(f'm = {m}, c = {c}')\n\nm = 2, c = -4\n\n\n\nx\n\narray([ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12.,\n       13., 14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25.,\n       26., 27., 28., 29., 30., 31., 32., 33., 34., 35., 36., 37., 38.,\n       39., 40., 41., 42., 43., 44., 45., 46., 47., 48., 49.])\n\n\n\ny = m*x+c\ny\n\narray([-4., -2.,  0.,  2.,  4.,  6.,  8., 10., 12., 14., 16., 18., 20.,\n       22., 24., 26., 28., 30., 32., 34., 36., 38., 40., 42., 44., 46.,\n       48., 50., 52., 54., 56., 58., 60., 62., 64., 66., 68., 70., 72.,\n       74., 76., 78., 80., 82., 84., 86., 88., 90., 92., 94.])\n\n\n\nplt.plot(x,y)\nplt.plot(x,x)\nplt.ylim(0,50)\nplt.xlim(0,50)\nplt.title('example linear plots')\nplt.legend(['y=2x-4', 'y=x'])\nplt.grid()\nplt.show()\n\n\n\n\nThe orange line is where y = x\nThe blue line is where y = 2x - 4"
  },
  {
    "objectID": "past-events/past-events.html",
    "href": "past-events/past-events.html",
    "title": "Past events",
    "section": "",
    "text": "Here are some details of past talks:\n\n\n\n\n\n\n\n\n  \n\n\n\n\nChat-GPT: The architecture behind the model\n\n\n\n\n\n\n\n\n\n\n\n\nJan 11, 2023\n\n\nPeter O’Connor\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample notebook with code\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nNumpy deep dive\n\n\n\n\n\n\n\n\n\n\n\n\nDec 21, 2022\n\n\nPeter O’Connor\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTest post linking to a notebook\n\n\n\n\n\n\n\n\n\n\n\n\nApr 5, 2023\n\n\nMike\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "We are a group of Squamish residents connected over a common interest in machine learning, data science and AI.\nWe aim to grow skills and knowledge, and make connections through a series of talks, group coding events, pair programming and hackathons.\nTo get involved, come along on Wednesday evenings to meet the group!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "Welcome to our landing page.\nPast Events"
  },
  {
    "objectID": "past-events/site-test2/index.html",
    "href": "past-events/site-test2/index.html",
    "title": "testing python code content",
    "section": "",
    "text": "Testing the site’s ability to display python code.\npython"
  },
  {
    "objectID": "past-events/numpy-peter/numpy-tutorial.html",
    "href": "past-events/numpy-peter/numpy-tutorial.html",
    "title": "ML Squamish",
    "section": "",
    "text": "A low level intro to the use of numerical libraries (mainly Pytorch but also Numpy and Tensorflow) for machine learning.\n\n\n\nGet everyone familiar with the basics of array-manipulation.\nMake sure even those people already familiar learn something new.\nIntroduce pytorch from the bottom-up.\n\n\n\n\nLibraries like Numpy, PyTorch, and Tensorflow use N-dimensional arrays as a basic datatype. They allow you to manipulate arrays much more compactily and faster than if you were to use native python. Behind the scenes, they do all the looping in C - which will typically be around 20-100x faster than doing it in python.\n\nfrom timeit import timeit\nt1=timeit(\"sum(ai*bi for ai, bi in zip(a, b))\", setup=\"import random; N=10000000; a=[random.gauss(0, 1) for _ in range(N)]; b=[random.gauss(0, 1) for _ in range(N)]\", number = 10)\nt2=timeit(\"(a*b).sum()\", setup=\"import numpy as np; N=10000000; a, b = np.random.randn(2, N)\", number = 10)\nprint(f\"With python looping: t={t1:.3f}, with numpy looping: t={t2:.3f}.  Speedup factor: {t1/t2:.0f}x\")\n\nWith python looping: t=9.208, with numpy looping: t=0.352.  Speedup factor: 26x"
  }
]